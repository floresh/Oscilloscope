******************************************************************************
                  TI ARM Linker PC v5.1.8                      
******************************************************************************
>> Linked Thu Oct 30 20:34:14 2014

OUTPUT FILE NAME:   <blinky.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 00000361


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
  FLASH                 00000000   00040000  000003fe  0003fc02  R  X
  SRAM                  20000000   00010000  00000114  0000feec  RW X


SEGMENT ALLOCATION MAP

run origin  load origin   length   init length attrs members
----------  ----------- ---------- ----------- ----- -------
00000000    00000000    00000400   00000400    r-x
  00000000    00000000    000000f0   000000f0    r-- .intvecs
  000000f0    000000f0    000002ee   000002ee    r-x .text
  000003e0    000003e0    00000020   00000020    r-- .cinit
20000000    20000000    00000114   00000000    rw-
  20000000    20000000    00000100   00000000    rw- .stack
  20000100    20000100    00000014   00000000    rw- .data


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.intvecs   0    00000000    000000f0     
                  00000000    000000f0     startup_ccs.obj (.intvecs)

.init_array 
*          0    00000000    00000000     UNINITIALIZED

.text      0    000000f0    000002ee     
                  000000f0    0000009c     rtsv7M3_T_le_eabi.lib : memcpy_t2.obj (.text)
                  0000018c    00000094                           : auto_init.obj (.text)
                  00000220    0000005e                           : copy_decompress_rle.obj (.text)
                  0000027e    00000002     startup_ccs.obj (.text:FaultISR)
                  00000280    00000058     blinky.obj (.text:main)
                  000002d8    00000044     rtsv7M3_T_le_eabi.lib : cpy_tbl.obj (.text)
                  0000031c    00000044                           : exit.obj (.text)
                  00000360    00000034                           : boot.obj (.text)
                  00000394    00000018                           : args_main.obj (.text)
                  000003ac    00000014                           : _lock.obj (.text)
                  000003c0    0000000e                           : copy_decompress_none.obj (.text:decompress:none)
                  000003ce    00000006     startup_ccs.obj (.text:ResetISR)
                  000003d4    00000006     rtsv7M3_T_le_eabi.lib : copy_decompress_rle.obj (.text:decompress:rle24)
                  000003da    00000002     startup_ccs.obj (.text:IntDefaultHandler)
                  000003dc    00000002     startup_ccs.obj (.text:NmiSR)

.cinit     0    000003e0    00000020     
                  000003e0    0000000f     (.cinit..data.load) [load image, compression = rle]
                  000003ef    00000001     --HOLE-- [fill = 0]
                  000003f0    00000008     (__TI_handler_table)
                  000003f8    00000008     (__TI_cinit_table)

.stack     0    20000000    00000100     UNINITIALIZED
                  20000000    00000100     --HOLE--

.data      0    20000100    00000014     UNINITIALIZED
                  20000100    00000008     rtsv7M3_T_le_eabi.lib : _lock.obj (.data)
                  20000108    00000008                           : exit.obj (.data)
                  20000110    00000004                           : stkdepth_vars.obj (.data)


LINKER GENERATED COPY TABLES

__TI_cinit_table @ 000003f8 records: 1, size/record: 8, table size: 8
	.data: load addr=000003e0, load size=0000000f bytes, run addr=20000100, run size=00000014 bytes, compression=rle


LINKER GENERATED HANDLER TABLE

__TI_handler_table @ 000003f0 records: 2, size/record: 4, table size: 8
	index: 0, handler: __TI_decompress_rle24
	index: 1, handler: __TI_decompress_none


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
0000031d   C$$EXIT
000003cf   ResetISR
UNDEFED    SHT$$INIT_ARRAY$$Base
UNDEFED    SHT$$INIT_ARRAY$$Limit
20000100   __STACK_END
00000100   __STACK_SIZE
20000100   __STACK_TOP
000003f8   __TI_CINIT_Base
00000400   __TI_CINIT_Limit
000003f0   __TI_Handler_Table_Base
000003f8   __TI_Handler_Table_Limit
00000001   __TI_args_main
0000018d   __TI_auto_init
20000108   __TI_cleanup_ptr
000003c1   __TI_decompress_none
000003d5   __TI_decompress_rle24
2000010c   __TI_dtors_ptr
00000000   __TI_static_base__
000000f1   __aeabi_memcpy
000000f1   __aeabi_memcpy4
000000f1   __aeabi_memcpy8
ffffffff   __binit__
ffffffff   __c_args__
20000000   __stack
00000395   _args_main
00000361   _c_int00
20000100   _lock
000003bb   _nop
000003b3   _register_lock
000003ad   _register_unlock
20000104   _unlock
00000321   abort
ffffffff   binit
000002d9   copy_in
00000329   exit
00000000   g_pfnVectors
00000281   main
20000110   main_func_sp
000000f1   memcpy


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000000   __TI_static_base__
00000000   g_pfnVectors
00000001   __TI_args_main
000000f1   __aeabi_memcpy
000000f1   __aeabi_memcpy4
000000f1   __aeabi_memcpy8
000000f1   memcpy
00000100   __STACK_SIZE
0000018d   __TI_auto_init
00000281   main
000002d9   copy_in
0000031d   C$$EXIT
00000321   abort
00000329   exit
00000361   _c_int00
00000395   _args_main
000003ad   _register_unlock
000003b3   _register_lock
000003bb   _nop
000003c1   __TI_decompress_none
000003cf   ResetISR
000003d5   __TI_decompress_rle24
000003f0   __TI_Handler_Table_Base
000003f8   __TI_CINIT_Base
000003f8   __TI_Handler_Table_Limit
00000400   __TI_CINIT_Limit
20000000   __stack
20000100   __STACK_END
20000100   __STACK_TOP
20000100   _lock
20000104   _unlock
20000108   __TI_cleanup_ptr
2000010c   __TI_dtors_ptr
20000110   main_func_sp
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    SHT$$INIT_ARRAY$$Base
UNDEFED    SHT$$INIT_ARRAY$$Limit

[39 symbols]
